package com.oneinch

import com.esaulpaugh.headlong.abi.Function
import com.esaulpaugh.headlong.abi.Tuple
import com.esaulpaugh.headlong.util.FastHex
import com.esaulpaugh.headlong.util.Strings
import java.nio.ByteBuffer


class Test {
    val data: String =
        "7c02520000000000000000000000000011431a89893025d2a48dca4eddc396f8c8117187000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001800000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a063000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000005b13b583d4317ab15186ed660a1e4c65c10da659000000000000000000000000d329365f5d1921b5cc04c91ede020b92236b32640000000000000000000000000000000000000000000000379f2fd195e002251b000000000000000000000000000000000000000000000000000000003d0f12e80000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000004400000000000000000000000000000000000000000000000000000000000000760800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a4b757fed60000000000000000000000005b13b583d4317ab15186ed660a1e4c65c10da6590000000000000000000000008f3cf7ad23cd3cadbd9735aff958023239c6a0630000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa841740000000000000000001e848010dd6d8a29d489bede472cc1b22dc695c144c5c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000010dd6d8a29d489bede472cc1b22dc695c144c5c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000024dd93f59a00000000000000000000000065d43b64e3b31965cd5ea367d4c2b94c0308479700000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a4b757fed600000000000000000000000065d43b64e3b31965cd5ea367d4c2b94c030847970000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000001e848011431a89893025d2a48dca4eddc396f8c8117187000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002647f8fe7a00000000000000000000000000000000000000000000000000000000000000080800000000000000000000000000000000000000000000000000000000000004400000000000000000000000011431a89893025d2a48dca4eddc396f8c811718700000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000a405971224000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004470bdb947000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000000000000000000000000000000000003d7d43400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a4b3af37c000000000000000000000000000000000000000000000000000000000000000808000000000000000000000000000000000000000000000000000000000000044000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000064d1660f99000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000d329365f5d1921b5cc04c91ede020b92236b326400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    var foo = Function.fromJson(
        "{\n" +
                "  \"inputs\": [\n" +
                "    {\n" +
                "      \"internalType\": \"contract IAggregationExecutor\",\n" +
                "      \"name\": \"caller\",\n" +
                "      \"type\": \"address\"\n" +
                "    },\n" +
                "    {\n" +
                "      \"components\": [\n" +
                "        {\n" +
                "          \"internalType\": \"contract IERC20\",\n" +
                "          \"name\": \"srcToken\",\n" +
                "          \"type\": \"address\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"contract IERC20\",\n" +
                "          \"name\": \"dstToken\",\n" +
                "          \"type\": \"address\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"address\",\n" +
                "          \"name\": \"srcReceiver\",\n" +
                "          \"type\": \"address\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"address\",\n" +
                "          \"name\": \"dstReceiver\",\n" +
                "          \"type\": \"address\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"uint256\",\n" +
                "          \"name\": \"amount\",\n" +
                "          \"type\": \"uint256\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"uint256\",\n" +
                "          \"name\": \"minReturnAmount\",\n" +
                "          \"type\": \"uint256\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"uint256\",\n" +
                "          \"name\": \"flags\",\n" +
                "          \"type\": \"uint256\"\n" +
                "        },\n" +
                "        {\n" +
                "          \"internalType\": \"bytes\",\n" +
                "          \"name\": \"permit\",\n" +
                "          \"type\": \"bytes\"\n" +
                "        }\n" +
                "      ],\n" +
                "      \"internalType\": \"struct AggregationRouterV3.SwapDescription\",\n" +
                "      \"name\": \"desc\",\n" +
                "      \"type\": \"tuple\"\n" +
                "    },\n" +
                "    {\n" +
                "      \"internalType\": \"bytes\",\n" +
                "      \"name\": \"data\",\n" +
                "      \"type\": \"bytes\"\n" +
                "    }\n" +
                "  ],\n" +
                "  \"name\": \"swap\",\n" +
                "  \"outputs\": [\n" +
                "    {\n" +
                "      \"internalType\": \"uint256\",\n" +
                "      \"name\": \"returnAmount\",\n" +
                "      \"type\": \"uint256\"\n" +
                "    },\n" +
                "    {\n" +
                "      \"internalType\": \"uint256\",\n" +
                "      \"name\": \"gasLeft\",\n" +
                "      \"type\": \"uint256\"\n" +
                "    }\n" +
                "  ],\n" +
                "  \"stateMutability\": \"payable\",\n" +
                "  \"type\": \"function\"\n" +
                "}"
    )

}

fun main() {
    val t = Test()
    var decoded: Tuple = t.foo.decodeCall(FastHex.decode(t.data))
    val y: ByteBuffer = t.foo.encodeCall(decoded)
    println(Strings.encode(y.array()))
    //decoded.forEach { println(it) }
   // println(y)
}